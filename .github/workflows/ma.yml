name: BuildJet workflow

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  arm64:
    runs-on: buildjet-32vcpu-ubuntu-2204-arm
    env:
      ARCH: arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build and push Debian repo
        id: build
        uses: docker/build-push-action@master
        with:
          file: Dockerfile.deb
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-${{ env.ARCH }}
      - name: Store digest
        run: echo ${{ steps.build.outputs.digest }} > hash-${{ env.ARCH }}
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: hash-${{ env.ARCH }}
          path: hash-${{ env.ARCH }}
          retention-days: 1
  amd64:
    runs-on: buildjet-32vcpu-ubuntu-2204
    env:
      ARCH: amd64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build and push Debian repo
        id: build
        uses: docker/build-push-action@master
        with:
          file: Dockerfile.deb
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-${{ env.ARCH }}
      - name: Store digest
        run: echo ${{ steps.build.outputs.digest }} > hash-${{ env.ARCH }}
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: hash-${{ env.ARCH }}
          path: hash-${{ env.ARCH }}
          retention-days: 1
  multiarch:
    runs-on: ubuntu-latest
    needs: [arm64, amd64]
    steps:
      - 
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v3
        with:
          name: hash-arm64
      - uses: actions/download-artifact@v3
        with:
          name: hash-amd64
      - name: debug
        run: cat hash*
      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master
        with:
          base-image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          extra-images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-arm64,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-amd64
          push: true
