name: BuildJet workflow

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  strategy:
    matrix:
      runs-on: ['buildjet-32vcpu-ubuntu-2204-arm', 'buildjet-32vcpu-ubuntu-2204']
      ocaml-version: ['4.14.1']
  build:
    runs-on: ${{ strategy.runs-on }}
    steps:
      -
        name: Detect architecture
        run: |
          if [ "${{ endswith(jobs.build.runs-on, 'arm') }}" = "true" ]; then
            echo "ARCH=arm64" >> $GITHUB_ENV
          else
            echo "ARCH=amd64" >> $GITHUB_ENV
          fi
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build and push Debian repo
        id: build
        uses: docker/build-push-action@master
        with:
          file: Dockerfile.deb
          env:
            - OCAML_VERSION=${{ strategy.ocaml-version }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-${{ strategy.ocaml-version }}-${{ env.ARCH }}
      - name: Store digest
        run: echo ${{ steps.build.outputs.digest }} > hash-${{ env.ARCH }}
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: hash-${{ env.ARCH }}
          path: hash-${{ env.ARCH }}
          retention-days: 1
