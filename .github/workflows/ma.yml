name: BuildJet workflow

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        runs-on: ['buildjet-32vcpu-ubuntu-2204-arm', 'buildjet-32vcpu-ubuntu-2204']
        ocaml-version: ['4.14.1', '5.0.0', '5.1.0']
    runs-on: ${{ matrix.runs-on }}
    steps:
      -
        name: Detect architecture
        run: |
          if [ "${{ endswith(matrix.runs-on, 'arm') }}" = "true" ]; then
            echo "ARCH=arm64" >> $GITHUB_ENV
          else
            echo "ARCH=amd64" >> $GITHUB_ENV
          fi
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build and push Debian repo
        id: build
        uses: docker/build-push-action@master
        with:
          file: Dockerfile.deb
          build-args: |
            OCAML_VERSION=${{ matrix.ocaml-version }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-${{ matrix.ocaml-version }}-${{ env.ARCH }}
          outputs: |
            type=local,dest=/tmp/debs
      - name: Upload debs
        uses: actions/upload-artifact@v3
        with:
          name: debs-${{ matrix.ocaml-version}}-${{ env.ARCH }}
          path: /tmp/debs
          retention-days: 1
  debs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download digests
        uses: actions/download-artifact@v3
      - name: Move debs to one directory
        run: |
          mkdir /tmp/debs
          for i in debs-*; do
            mv $i/*.deb /tmp/debs/
          done
      - name: Upload debs to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: /tmp/debs/*.deb
          tag: debs
          overwrite: true
          file_glob: true
